- put arguments from bars into spec
- tag version 0.1 and start stripping away all the cruft
- rewrite the documentation
- (maybe) add some built-in templates mapped to strings
- extract a chart object from the jQuery UI component (layerConext)

chart = orthagonal.chart(targetElement, { /* spec */});
chart.print(template, {/* spec */})

Extracting the orthagonal.chart() object is the last thing that needs
to happen. I need the API for templates to be solidified. Then it
doesn't matter if I rewrite the entire framework.

As far as the template API goes, there are no longer arguments. It's
just a question of what belongs to this and what belongs to this.spec.

If I want to keep data separate from the spec, I could just do:

chart = orthagonal.chart(targetElement, data, { /* spec */});
chart.print(template, {/* spec */})

Anyway, I can play around with different APIs for the framework, once
the API for templates is defined. The context with which a template
is called is where the real API lives. The framework is just gluing
templates together.